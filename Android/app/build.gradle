apply plugin: 'com.android.application'
apply plugin: 'realm-android'

def apikeyPropertiesFile = rootProject.file("api.properties")
def apikeyProperties = new Properties()
apikeyProperties.load(new FileInputStream(apikeyPropertiesFile))

android {
  flavorDimensions("version")
  productFlavors {
    // fda {
    //   dimension 'version'
    //   // Update `applicationId` with your Applicaiton ID (see https://developer.android.com/studio/build/application-id)
    //   // For example, you could set `applicationId` to "<prefix>_<env>.<domain>" or "com.<domain>.<subdomain>"
    //   applicationId "com.harvard.fda"
    //   versionCode 15
    //   versionName "1.0"
    // }
    // bubs {
    //   dimension 'version'
    //   applicationId "com.validcare.bubs"
    //   namespace "com.harvard"
    //   versionCode 435001
    //   versionName "4.3.5"
    //   // versionNameSuffix "-cw"

    //         // Include (or overwrite) default api.properties with custom properties
    //         def apiFlavorPropertiesFile = rootProject.file("api-bubs-prod.properties")
    //         def apiFlavorProperties = new Properties()
    //         apiFlavorProperties.load(new FileInputStream(apiFlavorPropertiesFile))
    //         buildConfigField("String", "API_KEY", apiFlavorProperties['API_KEY'])
    //         buildConfigField("String", "BASE_URL_STUDY_DATASTORE", apiFlavorProperties['BASE_URL_STUDY_DATASTORE'])
    //         buildConfigField("String", "BASE_URL_PARTICIPANT_DATASTORE", apiFlavorProperties['BASE_URL_PARTICIPANT_DATASTORE'])
    //         buildConfigField("String", "BASE_URL_PARTICIPANT_CONSENT_DATASTORE", apiFlavorProperties['BASE_URL_PARTICIPANT_CONSENT_DATASTORE'])
    //         buildConfigField("String", "BASE_URL_PARTICIPANT_ENROLLMENT_DATASTORE", apiFlavorProperties['BASE_URL_PARTICIPANT_ENROLLMENT_DATASTORE'])
    //         buildConfigField("String", "BASE_URL_AUTH_SERVER", apiFlavorProperties['BASE_URL_AUTH_SERVER'])
    //         buildConfigField("String", "BASE_URL_HYDRA_SERVER", apiFlavorProperties['BASE_URL_HYDRA_SERVER'])
    //         buildConfigField("String", "BASE_URL_RESPONSE_DATASTORE", apiFlavorProperties['BASE_URL_RESPONSE_DATASTORE'])
    //         buildConfigField("String", "APP_TYPE", apiFlavorProperties['APP_TYPE'])
    //         buildConfigField("String", "APP_ID", apiFlavorProperties['APP_ID'])
    //         buildConfigField("String", "HYDRA_CLIENT_ID", apiFlavorProperties['HYDRA_CLIENT_ID'])
    //         buildConfigField("String", "STUDY_ID", apiFlavorProperties['STUDY_ID'])
    //   }
    //     validcare {
    //         dimension 'version'
    //         applicationId "com.validcare.studies"
    //         namespace "com.harvard"
    //         versionCode 435001
    //         versionName "4.3.5"
    //         // versionNameSuffix "-vc"

    //         // Include (or overwrite) default api.properties with custom properties
    //         def apiFlavorPropertiesFile = rootProject.file("api-validcare-prod.properties")
    //         def apiFlavorProperties = new Properties()
    //         apiFlavorProperties.load(new FileInputStream(apiFlavorPropertiesFile))
    //         buildConfigField("String", "API_KEY", apiFlavorProperties['API_KEY'])
    //         buildConfigField("String", "BASE_URL_STUDY_DATASTORE", apiFlavorProperties['BASE_URL_STUDY_DATASTORE'])
    //         buildConfigField("String", "BASE_URL_PARTICIPANT_DATASTORE", apiFlavorProperties['BASE_URL_PARTICIPANT_DATASTORE'])
    //         buildConfigField("String", "BASE_URL_PARTICIPANT_CONSENT_DATASTORE", apiFlavorProperties['BASE_URL_PARTICIPANT_CONSENT_DATASTORE'])
    //         buildConfigField("String", "BASE_URL_PARTICIPANT_ENROLLMENT_DATASTORE", apiFlavorProperties['BASE_URL_PARTICIPANT_ENROLLMENT_DATASTORE'])
    //         buildConfigField("String", "BASE_URL_AUTH_SERVER", apiFlavorProperties['BASE_URL_AUTH_SERVER'])
    //         buildConfigField("String", "BASE_URL_HYDRA_SERVER", apiFlavorProperties['BASE_URL_HYDRA_SERVER'])
    //         buildConfigField("String", "BASE_URL_RESPONSE_DATASTORE", apiFlavorProperties['BASE_URL_RESPONSE_DATASTORE'])
    //         buildConfigField("String", "APP_TYPE", apiFlavorProperties['APP_TYPE'])
    //         buildConfigField("String", "APP_ID", apiFlavorProperties['APP_ID'])
    //         buildConfigField("String", "HYDRA_CLIENT_ID", apiFlavorProperties['HYDRA_CLIENT_ID'])
    //         buildConfigField("String", "STUDY_ID", apiFlavorProperties['STUDY_ID'])
    //     }
        validcareqa {
            dimension 'version'
            // Update `applicationId` with your Application ID (see https://developer.android.com/studio/build/application-id)
            // For example, you could set `applicationId` to "<prefix>_<env>.<domain>" or "com.<domain>.<subdomain>"
            applicationId "com.validcare.studies.qa"
            namespace "com.harvard"
            versionCode 300001
            versionName "3.10.0"
            // versionNameSuffix "-vcqa"

            // Include (or overwrite) default api.properties with custom properties
            def apiFlavorPropertiesFile = rootProject.file("api-validcare-qa.properties")
            def apiFlavorProperties = new Properties()
            apiFlavorProperties.load(new FileInputStream(apiFlavorPropertiesFile))
            buildConfigField("String", "API_KEY", apiFlavorProperties['API_KEY'])
            buildConfigField("String", "BASE_URL_STUDY_DATASTORE", apiFlavorProperties['BASE_URL_STUDY_DATASTORE'])
            buildConfigField("String", "BASE_URL_PARTICIPANT_DATASTORE", apiFlavorProperties['BASE_URL_PARTICIPANT_DATASTORE'])
            buildConfigField("String", "BASE_URL_PARTICIPANT_CONSENT_DATASTORE", apiFlavorProperties['BASE_URL_PARTICIPANT_CONSENT_DATASTORE'])
            buildConfigField("String", "BASE_URL_PARTICIPANT_ENROLLMENT_DATASTORE", apiFlavorProperties['BASE_URL_PARTICIPANT_ENROLLMENT_DATASTORE'])
            buildConfigField("String", "BASE_URL_AUTH_SERVER", apiFlavorProperties['BASE_URL_AUTH_SERVER'])
            buildConfigField("String", "BASE_URL_HYDRA_SERVER", apiFlavorProperties['BASE_URL_HYDRA_SERVER'])
            buildConfigField("String", "BASE_URL_RESPONSE_DATASTORE", apiFlavorProperties['BASE_URL_RESPONSE_DATASTORE'])
            buildConfigField("String", "APP_TYPE", apiFlavorProperties['APP_TYPE'])
            buildConfigField("String", "APP_ID", apiFlavorProperties['APP_ID'])
            buildConfigField("String", "HYDRA_CLIENT_ID", apiFlavorProperties['HYDRA_CLIENT_ID'])
            buildConfigField("String", "STUDY_ID", apiFlavorProperties['STUDY_ID'])
        }
    }

  buildFeatures {
    buildConfig = true
  }

  sourceSets {
    // bubs {
    //   res {
    //     srcDirs 'src/bubs/res'
    //   }
    //   java {
    //     srcDirs 'src/bubs/java'
    //   }
    // }
    // validcare {
    //   res {
    //     srcDirs 'src/validcare/res'
    //   }
    //   java {
    //     srcDirs 'src/validcare/java'
    //   }
    // }
    validcareqa {
      res {
        srcDirs 'src/validcareqa/res'
      }
      java {
        srcDirs 'src/validcareqa/java'
      }
    }
  }

  compileSdk 33
  buildToolsVersion '33.0.1'
  defaultConfig {
    minSdkVersion 21
    targetSdkVersion 33
    testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    multiDexEnabled true
    buildConfigField("String", "API_KEY", apikeyProperties['API_KEY'])
    buildConfigField("String", "BASE_URL_STUDY_DATASTORE", apikeyProperties['BASE_URL_STUDY_DATASTORE'])
    buildConfigField("String", "BASE_URL_PARTICIPANT_DATASTORE", apikeyProperties['BASE_URL_PARTICIPANT_DATASTORE'])
    buildConfigField("String", "BASE_URL_PARTICIPANT_CONSENT_DATASTORE", apikeyProperties['BASE_URL_PARTICIPANT_CONSENT_DATASTORE'])
    buildConfigField("String", "BASE_URL_PARTICIPANT_ENROLLMENT_DATASTORE", apikeyProperties['BASE_URL_PARTICIPANT_ENROLLMENT_DATASTORE'])
    buildConfigField("String", "BASE_URL_AUTH_SERVER", apikeyProperties['BASE_URL_AUTH_SERVER'])
    buildConfigField("String", "BASE_URL_HYDRA_SERVER", apikeyProperties['BASE_URL_HYDRA_SERVER'])
    buildConfigField("String", "BASE_URL_RESPONSE_DATASTORE", apikeyProperties['BASE_URL_RESPONSE_DATASTORE'])
    buildConfigField("String", "APP_TYPE", apikeyProperties['APP_TYPE'])
    buildConfigField("String", "APP_ID", apikeyProperties['APP_ID'])
    buildConfigField("String", "HYDRA_CLIENT_ID", apikeyProperties['HYDRA_CLIENT_ID'])
    buildConfigField("String", "STUDY_ID", apikeyProperties['STUDY_ID'])
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  repositories {
    maven {
      url 'https://github.com/uPhyca/stetho-realm/raw/master/maven-repo'
    }
  }
  packagingOptions {
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/MANIFEST.MF'
    exclude 'META-INF/NOTICE'
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }
  android {
    useLibrary 'org.apache.http.legacy'
    // aaptOptions.cruncherEnabled = false
    // aaptOptions.useNewCruncher = false
    lintOptions {
      abortOnError false
    }
  }
}

dependencies {
  implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
  implementation 'androidx.appcompat:appcompat:1.6.1'
  implementation 'com.google.android.material:material:1.9.0'
  implementation 'androidx.legacy:legacy-support-v4:1.0.0'
  implementation 'androidx.recyclerview:recyclerview:1.3.0'
  implementation 'androidx.multidex:multidex:2.0.0'
  implementation 'com.google.firebase:firebase-messaging:23.0.0'
  implementation('com.google.firebase:firebase-iid:21.1.0') {
    transitive = true
  }
  implementation 'com.google.firebase:firebase-core:16.0.7'
  implementation 'com.google.code.gson:gson:2.8.9'
  implementation 'com.google.android.gms:play-services-location:16.0.0'
  implementation 'com.google.android.gms:play-services-maps:16.1.0'
  implementation 'de.greenrobot:eventbus:2.4.0'
  implementation('org.researchstack:backbone:1.1.2') {
    // Zenetic sqlcipher is unused, and introduces incompatible 32-bit native code
    exclude group: 'net.zetetic'
    exclude group: 'co.touchlab.squeaky'
  }
  implementation 'net.zetetic:android-database-sqlcipher:4.4.2'
  implementation 'com.github.bumptech.glide:glide:4.12.0'
  implementation 'com.kovachcode:timePickerWithSeconds:1.0.1'
  implementation 'com.tom_roush:pdfbox-android:1.8.10.1'
  implementation 'androidx.browser:browser:1.5.0'
  implementation 'junit:junit:4.13.2'
  implementation 'androidx.work:work-runtime:2.7.1'


  implementation 'com.github.LucasFsc:Html2Pdf:0.2-beta'
  implementation 'com.github.naveenr-btc:RangeSeekBar:3.0.2'

  implementation 'com.github.chrisbanes:PhotoView:2.3.0'
  def RetroFitVersion = '2.9.0'
  def rxJavaVersionA = '2.1.1'
  def OKHTTPVersion = '2.7.5'

  //retrofit

  implementation 'com.squareup.retrofit2:retrofit:' + RetroFitVersion
  implementation 'com.squareup.retrofit2:adapter-rxjava:' + RetroFitVersion
  implementation 'com.squareup.retrofit2:converter-gson:' + RetroFitVersion
  implementation group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '3.8.0'
  implementation 'com.squareup.okhttp:okhttp-urlconnection:' + OKHTTPVersion
  implementation 'com.squareup.okhttp:okhttp:' + OKHTTPVersion
  implementation 'com.google.code.gson:gson:2.8.9'
  implementation 'com.squareup.retrofit2:converter-scalars:2.5.0'


  androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  androidTestImplementation "com.squareup.okhttp3:mockwebserver:4.4.0"
  testImplementation 'org.mockito:mockito-android:2.11.0'
  androidTestImplementation 'androidx.test:rules:1.5.0'
  testImplementation 'junit:junit:4.13.2'
}
apply plugin: 'com.google.gms.google-services'
